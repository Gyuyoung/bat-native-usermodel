// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pipeline.proto

#include "pipeline.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_pipeline_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_pipeline_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Hash_ngram;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_pipeline_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Linear_classifier;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_pipeline_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_To_lower;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_pipeline_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vector;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_pipeline_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Naive_bayes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_pipeline_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Classifier;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_pipeline_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Transformation;
}  // namespace protobuf_pipeline_2eproto
namespace pipelines {
class To_lowerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<To_lower>
      _instance;
} _To_lower_default_instance_;
class Hash_ngramDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Hash_ngram>
      _instance;
} _Hash_ngram_default_instance_;
class TransformationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Transformation>
      _instance;
  const ::pipelines::To_lower* to_lower_;
  const ::pipelines::Hash_ngram* hash_ngram_;
} _Transformation_default_instance_;
class VectorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vector>
      _instance;
} _Vector_default_instance_;
class Naive_bayesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Naive_bayes>
      _instance;
} _Naive_bayes_default_instance_;
class Linear_classifierDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Linear_classifier>
      _instance;
} _Linear_classifier_default_instance_;
class ClassifierDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Classifier>
      _instance;
  const ::pipelines::Naive_bayes* nb_;
  const ::pipelines::Linear_classifier* lc_;
} _Classifier_default_instance_;
class PipelineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pipeline>
      _instance;
} _Pipeline_default_instance_;
}  // namespace pipelines
namespace protobuf_pipeline_2eproto {
static void InitDefaultsTo_lower() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pipelines::_To_lower_default_instance_;
    new (ptr) ::pipelines::To_lower();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pipelines::To_lower::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_To_lower =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTo_lower}, {}};

static void InitDefaultsHash_ngram() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pipelines::_Hash_ngram_default_instance_;
    new (ptr) ::pipelines::Hash_ngram();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pipelines::Hash_ngram::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Hash_ngram =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHash_ngram}, {}};

static void InitDefaultsTransformation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pipelines::_Transformation_default_instance_;
    new (ptr) ::pipelines::Transformation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pipelines::Transformation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Transformation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTransformation}, {
      &protobuf_pipeline_2eproto::scc_info_To_lower.base,
      &protobuf_pipeline_2eproto::scc_info_Hash_ngram.base,}};

static void InitDefaultsVector() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pipelines::_Vector_default_instance_;
    new (ptr) ::pipelines::Vector();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pipelines::Vector::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vector =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVector}, {}};

static void InitDefaultsNaive_bayes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pipelines::_Naive_bayes_default_instance_;
    new (ptr) ::pipelines::Naive_bayes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pipelines::Naive_bayes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Naive_bayes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNaive_bayes}, {
      &protobuf_pipeline_2eproto::scc_info_Vector.base,}};

static void InitDefaultsLinear_classifier() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pipelines::_Linear_classifier_default_instance_;
    new (ptr) ::pipelines::Linear_classifier();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pipelines::Linear_classifier::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Linear_classifier =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLinear_classifier}, {}};

static void InitDefaultsClassifier() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pipelines::_Classifier_default_instance_;
    new (ptr) ::pipelines::Classifier();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pipelines::Classifier::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Classifier =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsClassifier}, {
      &protobuf_pipeline_2eproto::scc_info_Naive_bayes.base,
      &protobuf_pipeline_2eproto::scc_info_Linear_classifier.base,}};

static void InitDefaultsPipeline() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pipelines::_Pipeline_default_instance_;
    new (ptr) ::pipelines::Pipeline();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pipelines::Pipeline::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Pipeline =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPipeline}, {
      &protobuf_pipeline_2eproto::scc_info_Transformation.base,
      &protobuf_pipeline_2eproto::scc_info_Classifier.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_To_lower.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Hash_ngram.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Transformation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vector.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Naive_bayes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Linear_classifier.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Classifier.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Pipeline.base);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pipelines::To_lower, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pipelines::Hash_ngram, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pipelines::Hash_ngram, num_buckets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pipelines::Hash_ngram, hash_sizes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pipelines::Transformation, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pipelines::Transformation, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::pipelines::TransformationDefaultTypeInternal, to_lower_),
  offsetof(::pipelines::TransformationDefaultTypeInternal, hash_ngram_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pipelines::Transformation, Representation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pipelines::Vector, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pipelines::Vector, elements_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pipelines::Naive_bayes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pipelines::Naive_bayes, classes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pipelines::Naive_bayes, vectors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pipelines::Naive_bayes, class_priors_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pipelines::Linear_classifier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pipelines::Linear_classifier, classes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pipelines::Classifier, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pipelines::Classifier, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::pipelines::ClassifierDefaultTypeInternal, nb_),
  offsetof(::pipelines::ClassifierDefaultTypeInternal, lc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pipelines::Classifier, classifier_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pipelines::Pipeline, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pipelines::Pipeline, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pipelines::Pipeline, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pipelines::Pipeline, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pipelines::Pipeline, representation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pipelines::Pipeline, classifier_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pipelines::To_lower)},
  { 5, -1, sizeof(::pipelines::Hash_ngram)},
  { 12, -1, sizeof(::pipelines::Transformation)},
  { 20, -1, sizeof(::pipelines::Vector)},
  { 26, -1, sizeof(::pipelines::Naive_bayes)},
  { 34, -1, sizeof(::pipelines::Linear_classifier)},
  { 40, -1, sizeof(::pipelines::Classifier)},
  { 48, -1, sizeof(::pipelines::Pipeline)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pipelines::_To_lower_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pipelines::_Hash_ngram_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pipelines::_Transformation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pipelines::_Vector_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pipelines::_Naive_bayes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pipelines::_Linear_classifier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pipelines::_Classifier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pipelines::_Pipeline_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "pipeline.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016pipeline.proto\022\tpipelines\"\n\n\010To_lower\""
      "5\n\nHash_ngram\022\023\n\013num_buckets\030\001 \001(\005\022\022\n\nha"
      "sh_sizes\030\002 \003(\005\"x\n\016Transformation\022\'\n\010to_l"
      "ower\030\001 \001(\0132\023.pipelines.To_lowerH\000\022+\n\nhas"
      "h_ngram\030\002 \001(\0132\025.pipelines.Hash_ngramH\000B\020"
      "\n\016Representation\"\032\n\006Vector\022\020\n\010elements\030\001"
      " \003(\002\"X\n\013Naive_bayes\022\017\n\007classes\030\001 \003(\t\022\"\n\007"
      "vectors\030\002 \003(\0132\021.pipelines.Vector\022\024\n\014clas"
      "s_priors\030\003 \003(\002\"$\n\021Linear_classifier\022\017\n\007c"
      "lasses\030\001 \003(\t\"l\n\nClassifier\022$\n\002nb\030\001 \001(\0132\026"
      ".pipelines.Naive_bayesH\000\022*\n\002lc\030\002 \001(\0132\034.p"
      "ipelines.Linear_classifierH\000B\014\n\nclassifi"
      "er\"\236\001\n\010Pipeline\022\017\n\007version\030\001 \001(\005\022\020\n\010lang"
      "uage\030\002 \001(\t\022\021\n\ttimestamp\030\003 \001(\t\0221\n\016represe"
      "ntation\030\004 \003(\0132\031.pipelines.Transformation"
      "\022)\n\nclassifier\030\005 \001(\0132\025.pipelines.Classif"
      "ierb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 651);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pipeline.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_pipeline_2eproto
namespace pipelines {

// ===================================================================

void To_lower::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

To_lower::To_lower()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_pipeline_2eproto::scc_info_To_lower.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pipelines.To_lower)
}
To_lower::To_lower(const To_lower& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pipelines.To_lower)
}

void To_lower::SharedCtor() {
}

To_lower::~To_lower() {
  // @@protoc_insertion_point(destructor:pipelines.To_lower)
  SharedDtor();
}

void To_lower::SharedDtor() {
}

void To_lower::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* To_lower::descriptor() {
  ::protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const To_lower& To_lower::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_pipeline_2eproto::scc_info_To_lower.base);
  return *internal_default_instance();
}


void To_lower::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.To_lower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool To_lower::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pipelines.To_lower)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pipelines.To_lower)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pipelines.To_lower)
  return false;
#undef DO_
}

void To_lower::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pipelines.To_lower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pipelines.To_lower)
}

::google::protobuf::uint8* To_lower::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.To_lower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.To_lower)
  return target;
}

size_t To_lower::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.To_lower)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void To_lower::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pipelines.To_lower)
  GOOGLE_DCHECK_NE(&from, this);
  const To_lower* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const To_lower>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pipelines.To_lower)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pipelines.To_lower)
    MergeFrom(*source);
  }
}

void To_lower::MergeFrom(const To_lower& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.To_lower)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void To_lower::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pipelines.To_lower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void To_lower::CopyFrom(const To_lower& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.To_lower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool To_lower::IsInitialized() const {
  return true;
}

void To_lower::Swap(To_lower* other) {
  if (other == this) return;
  InternalSwap(other);
}
void To_lower::InternalSwap(To_lower* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata To_lower::GetMetadata() const {
  protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Hash_ngram::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Hash_ngram::kNumBucketsFieldNumber;
const int Hash_ngram::kHashSizesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Hash_ngram::Hash_ngram()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_pipeline_2eproto::scc_info_Hash_ngram.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pipelines.Hash_ngram)
}
Hash_ngram::Hash_ngram(const Hash_ngram& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      hash_sizes_(from.hash_sizes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  num_buckets_ = from.num_buckets_;
  // @@protoc_insertion_point(copy_constructor:pipelines.Hash_ngram)
}

void Hash_ngram::SharedCtor() {
  num_buckets_ = 0;
}

Hash_ngram::~Hash_ngram() {
  // @@protoc_insertion_point(destructor:pipelines.Hash_ngram)
  SharedDtor();
}

void Hash_ngram::SharedDtor() {
}

void Hash_ngram::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Hash_ngram::descriptor() {
  ::protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Hash_ngram& Hash_ngram::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_pipeline_2eproto::scc_info_Hash_ngram.base);
  return *internal_default_instance();
}


void Hash_ngram::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.Hash_ngram)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_sizes_.Clear();
  num_buckets_ = 0;
  _internal_metadata_.Clear();
}

bool Hash_ngram::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pipelines.Hash_ngram)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 num_buckets = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_buckets_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 hash_sizes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_hash_sizes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_hash_sizes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pipelines.Hash_ngram)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pipelines.Hash_ngram)
  return false;
#undef DO_
}

void Hash_ngram::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pipelines.Hash_ngram)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num_buckets = 1;
  if (this->num_buckets() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_buckets(), output);
  }

  // repeated int32 hash_sizes = 2;
  if (this->hash_sizes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _hash_sizes_cached_byte_size_));
  }
  for (int i = 0, n = this->hash_sizes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->hash_sizes(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pipelines.Hash_ngram)
}

::google::protobuf::uint8* Hash_ngram::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.Hash_ngram)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num_buckets = 1;
  if (this->num_buckets() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_buckets(), target);
  }

  // repeated int32 hash_sizes = 2;
  if (this->hash_sizes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _hash_sizes_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->hash_sizes_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.Hash_ngram)
  return target;
}

size_t Hash_ngram::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.Hash_ngram)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 hash_sizes = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->hash_sizes_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _hash_sizes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 num_buckets = 1;
  if (this->num_buckets() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_buckets());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Hash_ngram::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pipelines.Hash_ngram)
  GOOGLE_DCHECK_NE(&from, this);
  const Hash_ngram* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Hash_ngram>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pipelines.Hash_ngram)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pipelines.Hash_ngram)
    MergeFrom(*source);
  }
}

void Hash_ngram::MergeFrom(const Hash_ngram& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.Hash_ngram)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hash_sizes_.MergeFrom(from.hash_sizes_);
  if (from.num_buckets() != 0) {
    set_num_buckets(from.num_buckets());
  }
}

void Hash_ngram::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pipelines.Hash_ngram)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Hash_ngram::CopyFrom(const Hash_ngram& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.Hash_ngram)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Hash_ngram::IsInitialized() const {
  return true;
}

void Hash_ngram::Swap(Hash_ngram* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Hash_ngram::InternalSwap(Hash_ngram* other) {
  using std::swap;
  hash_sizes_.InternalSwap(&other->hash_sizes_);
  swap(num_buckets_, other->num_buckets_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Hash_ngram::GetMetadata() const {
  protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Transformation::InitAsDefaultInstance() {
  ::pipelines::_Transformation_default_instance_.to_lower_ = const_cast< ::pipelines::To_lower*>(
      ::pipelines::To_lower::internal_default_instance());
  ::pipelines::_Transformation_default_instance_.hash_ngram_ = const_cast< ::pipelines::Hash_ngram*>(
      ::pipelines::Hash_ngram::internal_default_instance());
}
void Transformation::set_allocated_to_lower(::pipelines::To_lower* to_lower) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Representation();
  if (to_lower) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      to_lower = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, to_lower, submessage_arena);
    }
    set_has_to_lower();
    Representation_.to_lower_ = to_lower;
  }
  // @@protoc_insertion_point(field_set_allocated:pipelines.Transformation.to_lower)
}
void Transformation::set_allocated_hash_ngram(::pipelines::Hash_ngram* hash_ngram) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Representation();
  if (hash_ngram) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hash_ngram = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hash_ngram, submessage_arena);
    }
    set_has_hash_ngram();
    Representation_.hash_ngram_ = hash_ngram;
  }
  // @@protoc_insertion_point(field_set_allocated:pipelines.Transformation.hash_ngram)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Transformation::kToLowerFieldNumber;
const int Transformation::kHashNgramFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Transformation::Transformation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_pipeline_2eproto::scc_info_Transformation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pipelines.Transformation)
}
Transformation::Transformation(const Transformation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_Representation();
  switch (from.Representation_case()) {
    case kToLower: {
      mutable_to_lower()->::pipelines::To_lower::MergeFrom(from.to_lower());
      break;
    }
    case kHashNgram: {
      mutable_hash_ngram()->::pipelines::Hash_ngram::MergeFrom(from.hash_ngram());
      break;
    }
    case REPRESENTATION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:pipelines.Transformation)
}

void Transformation::SharedCtor() {
  clear_has_Representation();
}

Transformation::~Transformation() {
  // @@protoc_insertion_point(destructor:pipelines.Transformation)
  SharedDtor();
}

void Transformation::SharedDtor() {
  if (has_Representation()) {
    clear_Representation();
  }
}

void Transformation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Transformation::descriptor() {
  ::protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Transformation& Transformation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_pipeline_2eproto::scc_info_Transformation.base);
  return *internal_default_instance();
}


void Transformation::clear_Representation() {
// @@protoc_insertion_point(one_of_clear_start:pipelines.Transformation)
  switch (Representation_case()) {
    case kToLower: {
      delete Representation_.to_lower_;
      break;
    }
    case kHashNgram: {
      delete Representation_.hash_ngram_;
      break;
    }
    case REPRESENTATION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REPRESENTATION_NOT_SET;
}


void Transformation::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.Transformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_Representation();
  _internal_metadata_.Clear();
}

bool Transformation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pipelines.Transformation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pipelines.To_lower to_lower = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_to_lower()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pipelines.Hash_ngram hash_ngram = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hash_ngram()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pipelines.Transformation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pipelines.Transformation)
  return false;
#undef DO_
}

void Transformation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pipelines.Transformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pipelines.To_lower to_lower = 1;
  if (has_to_lower()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_to_lower(), output);
  }

  // .pipelines.Hash_ngram hash_ngram = 2;
  if (has_hash_ngram()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_hash_ngram(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pipelines.Transformation)
}

::google::protobuf::uint8* Transformation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.Transformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pipelines.To_lower to_lower = 1;
  if (has_to_lower()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_to_lower(), deterministic, target);
  }

  // .pipelines.Hash_ngram hash_ngram = 2;
  if (has_hash_ngram()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_hash_ngram(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.Transformation)
  return target;
}

size_t Transformation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.Transformation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (Representation_case()) {
    // .pipelines.To_lower to_lower = 1;
    case kToLower: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Representation_.to_lower_);
      break;
    }
    // .pipelines.Hash_ngram hash_ngram = 2;
    case kHashNgram: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Representation_.hash_ngram_);
      break;
    }
    case REPRESENTATION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Transformation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pipelines.Transformation)
  GOOGLE_DCHECK_NE(&from, this);
  const Transformation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Transformation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pipelines.Transformation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pipelines.Transformation)
    MergeFrom(*source);
  }
}

void Transformation::MergeFrom(const Transformation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.Transformation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.Representation_case()) {
    case kToLower: {
      mutable_to_lower()->::pipelines::To_lower::MergeFrom(from.to_lower());
      break;
    }
    case kHashNgram: {
      mutable_hash_ngram()->::pipelines::Hash_ngram::MergeFrom(from.hash_ngram());
      break;
    }
    case REPRESENTATION_NOT_SET: {
      break;
    }
  }
}

void Transformation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pipelines.Transformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Transformation::CopyFrom(const Transformation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.Transformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Transformation::IsInitialized() const {
  return true;
}

void Transformation::Swap(Transformation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Transformation::InternalSwap(Transformation* other) {
  using std::swap;
  swap(Representation_, other->Representation_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Transformation::GetMetadata() const {
  protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vector::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector::kElementsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector::Vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_pipeline_2eproto::scc_info_Vector.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pipelines.Vector)
}
Vector::Vector(const Vector& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      elements_(from.elements_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pipelines.Vector)
}

void Vector::SharedCtor() {
}

Vector::~Vector() {
  // @@protoc_insertion_point(destructor:pipelines.Vector)
  SharedDtor();
}

void Vector::SharedDtor() {
}

void Vector::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vector::descriptor() {
  ::protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector& Vector::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_pipeline_2eproto::scc_info_Vector.base);
  return *internal_default_instance();
}


void Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.Vector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  elements_.Clear();
  _internal_metadata_.Clear();
}

bool Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pipelines.Vector)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float elements = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_elements())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_elements())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pipelines.Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pipelines.Vector)
  return false;
#undef DO_
}

void Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pipelines.Vector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float elements = 1;
  if (this->elements_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _elements_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->elements().data(), this->elements_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pipelines.Vector)
}

::google::protobuf::uint8* Vector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.Vector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float elements = 1;
  if (this->elements_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _elements_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->elements_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.Vector)
  return target;
}

size_t Vector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.Vector)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float elements = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->elements_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _elements_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pipelines.Vector)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pipelines.Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pipelines.Vector)
    MergeFrom(*source);
  }
}

void Vector::MergeFrom(const Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.Vector)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  elements_.MergeFrom(from.elements_);
}

void Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pipelines.Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector::CopyFrom(const Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector::IsInitialized() const {
  return true;
}

void Vector::Swap(Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector::InternalSwap(Vector* other) {
  using std::swap;
  elements_.InternalSwap(&other->elements_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vector::GetMetadata() const {
  protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Naive_bayes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Naive_bayes::kClassesFieldNumber;
const int Naive_bayes::kVectorsFieldNumber;
const int Naive_bayes::kClassPriorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Naive_bayes::Naive_bayes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_pipeline_2eproto::scc_info_Naive_bayes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pipelines.Naive_bayes)
}
Naive_bayes::Naive_bayes(const Naive_bayes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      classes_(from.classes_),
      vectors_(from.vectors_),
      class_priors_(from.class_priors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pipelines.Naive_bayes)
}

void Naive_bayes::SharedCtor() {
}

Naive_bayes::~Naive_bayes() {
  // @@protoc_insertion_point(destructor:pipelines.Naive_bayes)
  SharedDtor();
}

void Naive_bayes::SharedDtor() {
}

void Naive_bayes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Naive_bayes::descriptor() {
  ::protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Naive_bayes& Naive_bayes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_pipeline_2eproto::scc_info_Naive_bayes.base);
  return *internal_default_instance();
}


void Naive_bayes::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.Naive_bayes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  classes_.Clear();
  vectors_.Clear();
  class_priors_.Clear();
  _internal_metadata_.Clear();
}

bool Naive_bayes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pipelines.Naive_bayes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string classes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_classes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->classes(this->classes_size() - 1).data(),
            static_cast<int>(this->classes(this->classes_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pipelines.Naive_bayes.classes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pipelines.Vector vectors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vectors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float class_priors = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_class_priors())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26u, input, this->mutable_class_priors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pipelines.Naive_bayes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pipelines.Naive_bayes)
  return false;
#undef DO_
}

void Naive_bayes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pipelines.Naive_bayes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string classes = 1;
  for (int i = 0, n = this->classes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->classes(i).data(), static_cast<int>(this->classes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pipelines.Naive_bayes.classes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->classes(i), output);
  }

  // repeated .pipelines.Vector vectors = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vectors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->vectors(static_cast<int>(i)),
      output);
  }

  // repeated float class_priors = 3;
  if (this->class_priors_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _class_priors_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->class_priors().data(), this->class_priors_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pipelines.Naive_bayes)
}

::google::protobuf::uint8* Naive_bayes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.Naive_bayes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string classes = 1;
  for (int i = 0, n = this->classes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->classes(i).data(), static_cast<int>(this->classes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pipelines.Naive_bayes.classes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->classes(i), target);
  }

  // repeated .pipelines.Vector vectors = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vectors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->vectors(static_cast<int>(i)), deterministic, target);
  }

  // repeated float class_priors = 3;
  if (this->class_priors_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _class_priors_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->class_priors_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.Naive_bayes)
  return target;
}

size_t Naive_bayes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.Naive_bayes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string classes = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->classes_size());
  for (int i = 0, n = this->classes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->classes(i));
  }

  // repeated .pipelines.Vector vectors = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->vectors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vectors(static_cast<int>(i)));
    }
  }

  // repeated float class_priors = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->class_priors_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _class_priors_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Naive_bayes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pipelines.Naive_bayes)
  GOOGLE_DCHECK_NE(&from, this);
  const Naive_bayes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Naive_bayes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pipelines.Naive_bayes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pipelines.Naive_bayes)
    MergeFrom(*source);
  }
}

void Naive_bayes::MergeFrom(const Naive_bayes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.Naive_bayes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  classes_.MergeFrom(from.classes_);
  vectors_.MergeFrom(from.vectors_);
  class_priors_.MergeFrom(from.class_priors_);
}

void Naive_bayes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pipelines.Naive_bayes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Naive_bayes::CopyFrom(const Naive_bayes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.Naive_bayes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Naive_bayes::IsInitialized() const {
  return true;
}

void Naive_bayes::Swap(Naive_bayes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Naive_bayes::InternalSwap(Naive_bayes* other) {
  using std::swap;
  classes_.InternalSwap(CastToBase(&other->classes_));
  CastToBase(&vectors_)->InternalSwap(CastToBase(&other->vectors_));
  class_priors_.InternalSwap(&other->class_priors_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Naive_bayes::GetMetadata() const {
  protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Linear_classifier::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Linear_classifier::kClassesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Linear_classifier::Linear_classifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_pipeline_2eproto::scc_info_Linear_classifier.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pipelines.Linear_classifier)
}
Linear_classifier::Linear_classifier(const Linear_classifier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      classes_(from.classes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pipelines.Linear_classifier)
}

void Linear_classifier::SharedCtor() {
}

Linear_classifier::~Linear_classifier() {
  // @@protoc_insertion_point(destructor:pipelines.Linear_classifier)
  SharedDtor();
}

void Linear_classifier::SharedDtor() {
}

void Linear_classifier::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Linear_classifier::descriptor() {
  ::protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Linear_classifier& Linear_classifier::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_pipeline_2eproto::scc_info_Linear_classifier.base);
  return *internal_default_instance();
}


void Linear_classifier::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.Linear_classifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  classes_.Clear();
  _internal_metadata_.Clear();
}

bool Linear_classifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pipelines.Linear_classifier)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string classes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_classes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->classes(this->classes_size() - 1).data(),
            static_cast<int>(this->classes(this->classes_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pipelines.Linear_classifier.classes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pipelines.Linear_classifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pipelines.Linear_classifier)
  return false;
#undef DO_
}

void Linear_classifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pipelines.Linear_classifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string classes = 1;
  for (int i = 0, n = this->classes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->classes(i).data(), static_cast<int>(this->classes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pipelines.Linear_classifier.classes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->classes(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pipelines.Linear_classifier)
}

::google::protobuf::uint8* Linear_classifier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.Linear_classifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string classes = 1;
  for (int i = 0, n = this->classes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->classes(i).data(), static_cast<int>(this->classes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pipelines.Linear_classifier.classes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->classes(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.Linear_classifier)
  return target;
}

size_t Linear_classifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.Linear_classifier)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string classes = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->classes_size());
  for (int i = 0, n = this->classes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->classes(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Linear_classifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pipelines.Linear_classifier)
  GOOGLE_DCHECK_NE(&from, this);
  const Linear_classifier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Linear_classifier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pipelines.Linear_classifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pipelines.Linear_classifier)
    MergeFrom(*source);
  }
}

void Linear_classifier::MergeFrom(const Linear_classifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.Linear_classifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  classes_.MergeFrom(from.classes_);
}

void Linear_classifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pipelines.Linear_classifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Linear_classifier::CopyFrom(const Linear_classifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.Linear_classifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Linear_classifier::IsInitialized() const {
  return true;
}

void Linear_classifier::Swap(Linear_classifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Linear_classifier::InternalSwap(Linear_classifier* other) {
  using std::swap;
  classes_.InternalSwap(CastToBase(&other->classes_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Linear_classifier::GetMetadata() const {
  protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Classifier::InitAsDefaultInstance() {
  ::pipelines::_Classifier_default_instance_.nb_ = const_cast< ::pipelines::Naive_bayes*>(
      ::pipelines::Naive_bayes::internal_default_instance());
  ::pipelines::_Classifier_default_instance_.lc_ = const_cast< ::pipelines::Linear_classifier*>(
      ::pipelines::Linear_classifier::internal_default_instance());
}
void Classifier::set_allocated_nb(::pipelines::Naive_bayes* nb) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_classifier();
  if (nb) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      nb = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, nb, submessage_arena);
    }
    set_has_nb();
    classifier_.nb_ = nb;
  }
  // @@protoc_insertion_point(field_set_allocated:pipelines.Classifier.nb)
}
void Classifier::set_allocated_lc(::pipelines::Linear_classifier* lc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_classifier();
  if (lc) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      lc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, lc, submessage_arena);
    }
    set_has_lc();
    classifier_.lc_ = lc;
  }
  // @@protoc_insertion_point(field_set_allocated:pipelines.Classifier.lc)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Classifier::kNbFieldNumber;
const int Classifier::kLcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Classifier::Classifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_pipeline_2eproto::scc_info_Classifier.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pipelines.Classifier)
}
Classifier::Classifier(const Classifier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_classifier();
  switch (from.classifier_case()) {
    case kNb: {
      mutable_nb()->::pipelines::Naive_bayes::MergeFrom(from.nb());
      break;
    }
    case kLc: {
      mutable_lc()->::pipelines::Linear_classifier::MergeFrom(from.lc());
      break;
    }
    case CLASSIFIER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:pipelines.Classifier)
}

void Classifier::SharedCtor() {
  clear_has_classifier();
}

Classifier::~Classifier() {
  // @@protoc_insertion_point(destructor:pipelines.Classifier)
  SharedDtor();
}

void Classifier::SharedDtor() {
  if (has_classifier()) {
    clear_classifier();
  }
}

void Classifier::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Classifier::descriptor() {
  ::protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Classifier& Classifier::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_pipeline_2eproto::scc_info_Classifier.base);
  return *internal_default_instance();
}


void Classifier::clear_classifier() {
// @@protoc_insertion_point(one_of_clear_start:pipelines.Classifier)
  switch (classifier_case()) {
    case kNb: {
      delete classifier_.nb_;
      break;
    }
    case kLc: {
      delete classifier_.lc_;
      break;
    }
    case CLASSIFIER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CLASSIFIER_NOT_SET;
}


void Classifier::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.Classifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_classifier();
  _internal_metadata_.Clear();
}

bool Classifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pipelines.Classifier)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pipelines.Naive_bayes nb = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_nb()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pipelines.Linear_classifier lc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pipelines.Classifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pipelines.Classifier)
  return false;
#undef DO_
}

void Classifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pipelines.Classifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pipelines.Naive_bayes nb = 1;
  if (has_nb()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_nb(), output);
  }

  // .pipelines.Linear_classifier lc = 2;
  if (has_lc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_lc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pipelines.Classifier)
}

::google::protobuf::uint8* Classifier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.Classifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pipelines.Naive_bayes nb = 1;
  if (has_nb()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_nb(), deterministic, target);
  }

  // .pipelines.Linear_classifier lc = 2;
  if (has_lc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_lc(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.Classifier)
  return target;
}

size_t Classifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.Classifier)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (classifier_case()) {
    // .pipelines.Naive_bayes nb = 1;
    case kNb: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *classifier_.nb_);
      break;
    }
    // .pipelines.Linear_classifier lc = 2;
    case kLc: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *classifier_.lc_);
      break;
    }
    case CLASSIFIER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Classifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pipelines.Classifier)
  GOOGLE_DCHECK_NE(&from, this);
  const Classifier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Classifier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pipelines.Classifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pipelines.Classifier)
    MergeFrom(*source);
  }
}

void Classifier::MergeFrom(const Classifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.Classifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.classifier_case()) {
    case kNb: {
      mutable_nb()->::pipelines::Naive_bayes::MergeFrom(from.nb());
      break;
    }
    case kLc: {
      mutable_lc()->::pipelines::Linear_classifier::MergeFrom(from.lc());
      break;
    }
    case CLASSIFIER_NOT_SET: {
      break;
    }
  }
}

void Classifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pipelines.Classifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Classifier::CopyFrom(const Classifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.Classifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Classifier::IsInitialized() const {
  return true;
}

void Classifier::Swap(Classifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Classifier::InternalSwap(Classifier* other) {
  using std::swap;
  swap(classifier_, other->classifier_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Classifier::GetMetadata() const {
  protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Pipeline::InitAsDefaultInstance() {
  ::pipelines::_Pipeline_default_instance_._instance.get_mutable()->classifier_ = const_cast< ::pipelines::Classifier*>(
      ::pipelines::Classifier::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pipeline::kVersionFieldNumber;
const int Pipeline::kLanguageFieldNumber;
const int Pipeline::kTimestampFieldNumber;
const int Pipeline::kRepresentationFieldNumber;
const int Pipeline::kClassifierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pipeline::Pipeline()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_pipeline_2eproto::scc_info_Pipeline.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pipelines.Pipeline)
}
Pipeline::Pipeline(const Pipeline& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      representation_(from.representation_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.language().size() > 0) {
    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.timestamp().size() > 0) {
    timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timestamp_);
  }
  if (from.has_classifier()) {
    classifier_ = new ::pipelines::Classifier(*from.classifier_);
  } else {
    classifier_ = NULL;
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:pipelines.Pipeline)
}

void Pipeline::SharedCtor() {
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&classifier_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&classifier_)) + sizeof(version_));
}

Pipeline::~Pipeline() {
  // @@protoc_insertion_point(destructor:pipelines.Pipeline)
  SharedDtor();
}

void Pipeline::SharedDtor() {
  language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete classifier_;
}

void Pipeline::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Pipeline::descriptor() {
  ::protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pipeline& Pipeline::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_pipeline_2eproto::scc_info_Pipeline.base);
  return *internal_default_instance();
}


void Pipeline::Clear() {
// @@protoc_insertion_point(message_clear_start:pipelines.Pipeline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  representation_.Clear();
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && classifier_ != NULL) {
    delete classifier_;
  }
  classifier_ = NULL;
  version_ = 0;
  _internal_metadata_.Clear();
}

bool Pipeline::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pipelines.Pipeline)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string language = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language().data(), static_cast<int>(this->language().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pipelines.Pipeline.language"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timestamp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->timestamp().data(), static_cast<int>(this->timestamp().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pipelines.Pipeline.timestamp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pipelines.Transformation representation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_representation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pipelines.Classifier classifier = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_classifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pipelines.Pipeline)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pipelines.Pipeline)
  return false;
#undef DO_
}

void Pipeline::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pipelines.Pipeline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // string language = 2;
  if (this->language().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pipelines.Pipeline.language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->language(), output);
  }

  // string timestamp = 3;
  if (this->timestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timestamp().data(), static_cast<int>(this->timestamp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pipelines.Pipeline.timestamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->timestamp(), output);
  }

  // repeated .pipelines.Transformation representation = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->representation_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->representation(static_cast<int>(i)),
      output);
  }

  // .pipelines.Classifier classifier = 5;
  if (this->has_classifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_classifier(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pipelines.Pipeline)
}

::google::protobuf::uint8* Pipeline::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pipelines.Pipeline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->version(), target);
  }

  // string language = 2;
  if (this->language().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language().data(), static_cast<int>(this->language().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pipelines.Pipeline.language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->language(), target);
  }

  // string timestamp = 3;
  if (this->timestamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timestamp().data(), static_cast<int>(this->timestamp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pipelines.Pipeline.timestamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->timestamp(), target);
  }

  // repeated .pipelines.Transformation representation = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->representation_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->representation(static_cast<int>(i)), deterministic, target);
  }

  // .pipelines.Classifier classifier = 5;
  if (this->has_classifier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_classifier(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pipelines.Pipeline)
  return target;
}

size_t Pipeline::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pipelines.Pipeline)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pipelines.Transformation representation = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->representation_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->representation(static_cast<int>(i)));
    }
  }

  // string language = 2;
  if (this->language().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language());
  }

  // string timestamp = 3;
  if (this->timestamp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->timestamp());
  }

  // .pipelines.Classifier classifier = 5;
  if (this->has_classifier()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *classifier_);
  }

  // int32 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pipeline::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pipelines.Pipeline)
  GOOGLE_DCHECK_NE(&from, this);
  const Pipeline* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pipeline>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pipelines.Pipeline)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pipelines.Pipeline)
    MergeFrom(*source);
  }
}

void Pipeline::MergeFrom(const Pipeline& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pipelines.Pipeline)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  representation_.MergeFrom(from.representation_);
  if (from.language().size() > 0) {

    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  if (from.timestamp().size() > 0) {

    timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timestamp_);
  }
  if (from.has_classifier()) {
    mutable_classifier()->::pipelines::Classifier::MergeFrom(from.classifier());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void Pipeline::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pipelines.Pipeline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pipeline::CopyFrom(const Pipeline& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pipelines.Pipeline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pipeline::IsInitialized() const {
  return true;
}

void Pipeline::Swap(Pipeline* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pipeline::InternalSwap(Pipeline* other) {
  using std::swap;
  CastToBase(&representation_)->InternalSwap(CastToBase(&other->representation_));
  language_.Swap(&other->language_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  timestamp_.Swap(&other->timestamp_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(classifier_, other->classifier_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Pipeline::GetMetadata() const {
  protobuf_pipeline_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pipeline_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pipelines
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pipelines::To_lower* Arena::CreateMaybeMessage< ::pipelines::To_lower >(Arena* arena) {
  return Arena::CreateInternal< ::pipelines::To_lower >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pipelines::Hash_ngram* Arena::CreateMaybeMessage< ::pipelines::Hash_ngram >(Arena* arena) {
  return Arena::CreateInternal< ::pipelines::Hash_ngram >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pipelines::Transformation* Arena::CreateMaybeMessage< ::pipelines::Transformation >(Arena* arena) {
  return Arena::CreateInternal< ::pipelines::Transformation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pipelines::Vector* Arena::CreateMaybeMessage< ::pipelines::Vector >(Arena* arena) {
  return Arena::CreateInternal< ::pipelines::Vector >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pipelines::Naive_bayes* Arena::CreateMaybeMessage< ::pipelines::Naive_bayes >(Arena* arena) {
  return Arena::CreateInternal< ::pipelines::Naive_bayes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pipelines::Linear_classifier* Arena::CreateMaybeMessage< ::pipelines::Linear_classifier >(Arena* arena) {
  return Arena::CreateInternal< ::pipelines::Linear_classifier >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pipelines::Classifier* Arena::CreateMaybeMessage< ::pipelines::Classifier >(Arena* arena) {
  return Arena::CreateInternal< ::pipelines::Classifier >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pipelines::Pipeline* Arena::CreateMaybeMessage< ::pipelines::Pipeline >(Arena* arena) {
  return Arena::CreateInternal< ::pipelines::Pipeline >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
